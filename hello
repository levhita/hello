#! /usr/bin/env python
import tweepy
from tweepy import OAuthHandler
from tweepy.streaming import StreamListener
from tweepy import Stream
import time
import json
import ConfigParser
import sys
import requests.packages.urllib3

lyrics = []
counter = 1
api = ""
length = 0
screen_name = ""
say_hello_to = ""

class MsgListener(StreamListener):

    def on_direct_message(self, status):
        global lyrics, counter, api, screen_name, say_hello_to, length
        
        from_screen_name = status._json['direct_message']['sender']['screen_name']
        if from_screen_name == say_hello_to:
            time.sleep(5)
            print say_hello_to + " ("+str(counter)+"): " + lyrics[counter]
            api.send_direct_message(screen_name=say_hello_to, text=lyrics[counter])
            if counter < length-1:
                counter += 1
            else:
                print "Finished"
                exit(0)
    
    def on_error(self, status):
       print status

if __name__ == '__main__':

    Config = ConfigParser.ConfigParser()
    Config.read("config.ini")
    requests.packages.urllib3.disable_warnings()
    
    api_key         = Config.get("twitter", "api_key")
    api_secret      = Config.get("twitter", "api_secret")
    screen_name     = sys.argv[1]
    say_hello_to    = sys.argv[2]
    access_token    = sys.argv[3]
    access_secret   = sys.argv[4]
    
    songfile = Config.get("song", "filename")
    lyrics = [line.rstrip('\n') for line in open(songfile)]
    length = len(lyrics)
    
    auth = OAuthHandler(api_key, api_secret)
    auth.set_access_token(access_token, access_secret)
    listener = MsgListener()
    stream = Stream(auth, listener)
    api = tweepy.API(auth)
    print say_hello_to + " ("+str(0)+"): " + lyrics[0]
    api.send_direct_message(screen_name=say_hello_to, text=lyrics[0])
    stream.userstream()